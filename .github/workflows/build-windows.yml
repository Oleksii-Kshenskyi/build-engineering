name: Build and Test on Windows

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build on Windows
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        choco install cmake python3 ninja mingw
        python -m venv venv
        venv\Scripts\Activate.ps1
        python -m pip install --upgrade pip
        pip install conan

    - name: Create Windows Conan Profile
      run: |
        mkdir -p $env:USERPROFILE\.conan2\profiles
        echo [settings] > $env:USERPROFILE\.conan2\profiles\default
        echo os=Windows >> $env:USERPROFILE\.conan2\profiles\default
        echo arch=x86_64 >> $env:USERPROFILE\.conan2\profiles\default
        echo build_type=Release >> $env:USERPROFILE\.conan2\profiles\default
        echo compiler=gcc >> $env:USERPROFILE\.conan2\profiles\default
        echo compiler.version=14 >> $env:USERPROFILE\.conan2\profiles\default
        echo compiler.libcxx=libstdc++11 >> $env:USERPROFILE\.conan2\profiles\default
        echo compiler.cppstd=20 >> $env:USERPROFILE\.conan2\profiles\default
        echo [conf] >> $env:USERPROFILE\.conan2\profiles\default
        echo tools.cmake.cmaketoolchain:generator=Ninja >> $env:USERPROFILE\.conan2\profiles\default


    - name: Install dependencies and build everything
      run: |
        venv\Scripts\Activate.ps1
        conan install . --build=missing
        conan build .

    - name: Run C++ Tests
      run: |
        cd build\Release && ctest --output-on-failure

    - name: Debug PYTHONPATH
      run: |
        dir build\Release
        dir lib
        echo "PYTHONPATH: $env:PYTHONPATH"

    - name: Run Python Tests
      run: |
        venv\Scripts\Activate.ps1
        $env:PYTHONPATH = "$PWD\build\Release;$PWD\test;$PYTHONPATH"
        python -m unittest test_pysort
